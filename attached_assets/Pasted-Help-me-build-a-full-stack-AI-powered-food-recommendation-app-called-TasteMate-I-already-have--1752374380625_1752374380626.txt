Help me build a full-stack AI-powered food recommendation app called **TasteMate**.

I already have some code, but I want to finalize and clean it up using best practices. Here's what the app must include:

---

### 🌐 Frontend (React + Vite):
- Responsive, mobile-first design
- Clean modern UI with centered card layout, glowing pepper spiciness slider, and pill-shaped flavor buttons with emojis
- Promo image carousel at the top with rotating `.webp` images and captions from the database
- "Surprise Me" button with 🎲 emoji
- Flag icons in header to toggle between English 🇺🇸 and Spanish 🇲🇽
- Chatbot input box where user types cravings and selects spiciness level + flavors
- All text, promo captions, buttons, etc. must change language with i18n (using `en.json`, `es.json`)
- Theme toggle (dark/light) and support for admin-defined themes (e.g., Minty, Sunset, Inferno)
- All flavor hotkeys and spice levels loaded dynamically from the backend

---

### 🤖 Backend (Node.js + Express):
- MongoDB connection (via Atlas) using environment variable `MONGODB_URI`
- Models: `Flavor`, `Promo`, `MenuItem`, `Hotkey`, `Theme`, `Spiciness`
- Routes:
  - `GET/POST/PUT/DELETE` for `/api/menuitems`, `/api/flavors`, `/api/promos`, `/api/themes`, `/api/hotkeys`
  - `GET /api/spiciness`
  - `POST /api/chat` returns AI response using OpenAI API (mock first, real later)
  - `POST /api/admin/login` returns token (basic auth for now)
- Protect admin routes with token-based middleware (`protectRoute`, `adminOnly`)
- Fallback demo data if MongoDB connection fails
- Auto-seed sample data on first run (themes, promos, menu, hotkeys, etc.)

---

### 🛠️ Admin Features:
- Login screen
- Admin dashboard with ability to:
  - Create/update/delete menu items, promos, themes, flavors, hotkeys
  - Toggle active theme
  - View chatbot stats
- All CRUD changes update live frontend

---

### ⚙️ Dev Setup:
- `.env` file with:
  - `MONGODB_URI=...`
  - `OPENAI_API_KEY=...`
- Deployable on Replit and also usable locally with Vite and Express
- Compatible with Replit Secrets panel and file structure
- Help me test and debug Mongo errors or route conflicts

---

Start by analyzing my folder. If something's missing, create it. If something’s broken, fix it. Make sure the final version is clean, stable, and can be pushed to GitHub. Ask before replacing files unless you're sure. Also help me keep this modular so I can resell it as a demo and a pro version later.

